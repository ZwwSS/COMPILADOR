Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DOSPUNTO

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> imprimir_instr
Rule 5     instruccion -> asignacion_instr
Rule 6     instruccion -> if_instr
Rule 7     instruccion -> while_instr
Rule 8     if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ statement LLAVDER
Rule 9     statement -> imprimir_instr
Rule 10    statement -> if_instr
Rule 11    statement -> expresion
Rule 12    statement -> while_instr
Rule 13    while_instr -> WHILE PARIZQ expresion_logica PARDER LLAVIZQ statement LLAVDER
Rule 14    asignacion_instr -> ID IGUAL expresion PTCOMA
Rule 15    expresion -> ENTERO
Rule 16    expresion -> DECIMAL
Rule 17    expresion -> CADENA
Rule 18    expresion -> ID
Rule 19    imprimir_instr -> PRINT PARIZQ expresion PARDER PTCOMA
Rule 20    expresion -> PARIZQ expresion PARDER
Rule 21    expresion_logica -> expresion MENQUE expresion
Rule 22    expresion_logica -> expresion MAYQUE expresion
Rule 23    expresion_logica -> expresion IGUALQUE expresion
Rule 24    expresion_logica -> expresion NIGUALQUE expresion
Rule 25    expresion_logica -> expresion MAYIGUAL expresion
Rule 26    expresion_logica -> expresion MENIGUAL expresion
Rule 27    expresion_logica -> PARIZQ expresion_logica PARDER
Rule 28    expresion_logica -> PARIZQ expresion_logica PARDER MENQUE PARIZQ expresion_logica PARDER
Rule 29    expresion_logica -> PARIZQ expresion_logica PARDER MAYQUE PARIZQ expresion_logica PARDER
Rule 30    expresion_logica -> PARIZQ expresion_logica PARDER IGUALQUE PARIZQ expresion_logica PARDER
Rule 31    expresion_logica -> PARIZQ expresion_logica PARDER NIGUALQUE PARIZQ expresion_logica PARDER
Rule 32    expresion_logica -> PARIZQ expresion_logica PARDER MAYIGUAL PARIZQ expresion_logica PARDER
Rule 33    expresion_logica -> PARIZQ expresion_logica PARDER MENIGUAL PARIZQ expresion_logica PARDER
Rule 34    expresion_logica -> PARIZQ expresion_logica PARDER AND PARIZQ expresion_logica PARDER
Rule 35    expresion_logica -> PARIZQ expresion_logica PARDER ORD PARIZQ expresion_logica PARDER
Rule 36    expresion_logica -> PARIZQ expresion_logica PARDER NOT PARIZQ expresion_logica PARDER
Rule 37    expresion -> expresion MAS expresion
Rule 38    expresion -> expresion MENOS expresion
Rule 39    expresion -> expresion POR expresion
Rule 40    expresion -> expresion DIVIDIDO expresion

Terminals, with rules where they appear

AND                  : 34
CADENA               : 17
DECIMAL              : 16
DIVIDIDO             : 40
DOSPUNTO             : 
ENTERO               : 15
ID                   : 14 18
IF                   : 8
IGUAL                : 14
IGUALQUE             : 23 30
LLAVDER              : 8 13
LLAVIZQ              : 8 13
MAS                  : 37
MAYIGUAL             : 25 32
MAYQUE               : 22 29
MENIGUAL             : 26 33
MENOS                : 38
MENQUE               : 21 28
NIGUALQUE            : 24 31
NOT                  : 36
ORD                  : 35
PARDER               : 8 13 19 20 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36
PARIZQ               : 8 13 19 20 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36
POR                  : 39
PRINT                : 19
PTCOMA               : 14 19
WHILE                : 13
error                : 

Nonterminals, with rules where they appear

asignacion_instr     : 5
expresion            : 11 14 19 20 21 21 22 22 23 23 24 24 25 25 26 26 37 37 38 38 39 39 40 40
expresion_logica     : 8 13 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36
if_instr             : 6 10
imprimir_instr       : 4 9
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2
statement            : 8 13
while_instr          : 7 12

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . asignacion_instr
    (6) instruccion -> . if_instr
    (7) instruccion -> . while_instr
    (19) imprimir_instr -> . PRINT PARIZQ expresion PARDER PTCOMA
    (14) asignacion_instr -> . ID IGUAL expresion PTCOMA
    (8) if_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ statement LLAVDER
    (13) while_instr -> . WHILE PARIZQ expresion_logica PARDER LLAVIZQ statement LLAVDER

    PRINT           shift and go to state 8
    ID              shift and go to state 9
    IF              shift and go to state 10
    WHILE           shift and go to state 11

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    asignacion_instr               shift and go to state 5
    if_instr                       shift and go to state 6
    while_instr                    shift and go to state 7

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . asignacion_instr
    (6) instruccion -> . if_instr
    (7) instruccion -> . while_instr
    (19) imprimir_instr -> . PRINT PARIZQ expresion PARDER PTCOMA
    (14) asignacion_instr -> . ID IGUAL expresion PTCOMA
    (8) if_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ statement LLAVDER
    (13) while_instr -> . WHILE PARIZQ expresion_logica PARDER LLAVIZQ statement LLAVDER

    $end            reduce using rule 1 (init -> instrucciones .)
    PRINT           shift and go to state 8
    ID              shift and go to state 9
    IF              shift and go to state 10
    WHILE           shift and go to state 11

    instruccion                    shift and go to state 12
    imprimir_instr                 shift and go to state 4
    asignacion_instr               shift and go to state 5
    if_instr                       shift and go to state 6
    while_instr                    shift and go to state 7

state 3

    (3) instrucciones -> instruccion .

    PRINT           reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    IF              reduce using rule 3 (instrucciones -> instruccion .)
    WHILE           reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> imprimir_instr .

    PRINT           reduce using rule 4 (instruccion -> imprimir_instr .)
    ID              reduce using rule 4 (instruccion -> imprimir_instr .)
    IF              reduce using rule 4 (instruccion -> imprimir_instr .)
    WHILE           reduce using rule 4 (instruccion -> imprimir_instr .)
    $end            reduce using rule 4 (instruccion -> imprimir_instr .)


state 5

    (5) instruccion -> asignacion_instr .

    PRINT           reduce using rule 5 (instruccion -> asignacion_instr .)
    ID              reduce using rule 5 (instruccion -> asignacion_instr .)
    IF              reduce using rule 5 (instruccion -> asignacion_instr .)
    WHILE           reduce using rule 5 (instruccion -> asignacion_instr .)
    $end            reduce using rule 5 (instruccion -> asignacion_instr .)


state 6

    (6) instruccion -> if_instr .

    PRINT           reduce using rule 6 (instruccion -> if_instr .)
    ID              reduce using rule 6 (instruccion -> if_instr .)
    IF              reduce using rule 6 (instruccion -> if_instr .)
    WHILE           reduce using rule 6 (instruccion -> if_instr .)
    $end            reduce using rule 6 (instruccion -> if_instr .)


state 7

    (7) instruccion -> while_instr .

    PRINT           reduce using rule 7 (instruccion -> while_instr .)
    ID              reduce using rule 7 (instruccion -> while_instr .)
    IF              reduce using rule 7 (instruccion -> while_instr .)
    WHILE           reduce using rule 7 (instruccion -> while_instr .)
    $end            reduce using rule 7 (instruccion -> while_instr .)


state 8

    (19) imprimir_instr -> PRINT . PARIZQ expresion PARDER PTCOMA

    PARIZQ          shift and go to state 13


state 9

    (14) asignacion_instr -> ID . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 14


state 10

    (8) if_instr -> IF . PARIZQ expresion_logica PARDER LLAVIZQ statement LLAVDER

    PARIZQ          shift and go to state 15


state 11

    (13) while_instr -> WHILE . PARIZQ expresion_logica PARDER LLAVIZQ statement LLAVDER

    PARIZQ          shift and go to state 16


state 12

    (2) instrucciones -> instrucciones instruccion .

    PRINT           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 13

    (19) imprimir_instr -> PRINT PARIZQ . expresion PARDER PTCOMA
    (15) expresion -> . ENTERO
    (16) expresion -> . DECIMAL
    (17) expresion -> . CADENA
    (18) expresion -> . ID
    (20) expresion -> . PARIZQ expresion PARDER
    (37) expresion -> . expresion MAS expresion
    (38) expresion -> . expresion MENOS expresion
    (39) expresion -> . expresion POR expresion
    (40) expresion -> . expresion DIVIDIDO expresion

    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA          shift and go to state 21
    ID              shift and go to state 22
    PARIZQ          shift and go to state 17

    expresion                      shift and go to state 18

state 14

    (14) asignacion_instr -> ID IGUAL . expresion PTCOMA
    (15) expresion -> . ENTERO
    (16) expresion -> . DECIMAL
    (17) expresion -> . CADENA
    (18) expresion -> . ID
    (20) expresion -> . PARIZQ expresion PARDER
    (37) expresion -> . expresion MAS expresion
    (38) expresion -> . expresion MENOS expresion
    (39) expresion -> . expresion POR expresion
    (40) expresion -> . expresion DIVIDIDO expresion

    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA          shift and go to state 21
    ID              shift and go to state 22
    PARIZQ          shift and go to state 17

    expresion                      shift and go to state 23

state 15

    (8) if_instr -> IF PARIZQ . expresion_logica PARDER LLAVIZQ statement LLAVDER
    (21) expresion_logica -> . expresion MENQUE expresion
    (22) expresion_logica -> . expresion MAYQUE expresion
    (23) expresion_logica -> . expresion IGUALQUE expresion
    (24) expresion_logica -> . expresion NIGUALQUE expresion
    (25) expresion_logica -> . expresion MAYIGUAL expresion
    (26) expresion_logica -> . expresion MENIGUAL expresion
    (27) expresion_logica -> . PARIZQ expresion_logica PARDER
    (28) expresion_logica -> . PARIZQ expresion_logica PARDER MENQUE PARIZQ expresion_logica PARDER
    (29) expresion_logica -> . PARIZQ expresion_logica PARDER MAYQUE PARIZQ expresion_logica PARDER
    (30) expresion_logica -> . PARIZQ expresion_logica PARDER IGUALQUE PARIZQ expresion_logica PARDER
    (31) expresion_logica -> . PARIZQ expresion_logica PARDER NIGUALQUE PARIZQ expresion_logica PARDER
    (32) expresion_logica -> . PARIZQ expresion_logica PARDER MAYIGUAL PARIZQ expresion_logica PARDER
    (33) expresion_logica -> . PARIZQ expresion_logica PARDER MENIGUAL PARIZQ expresion_logica PARDER
    (34) expresion_logica -> . PARIZQ expresion_logica PARDER AND PARIZQ expresion_logica PARDER
    (35) expresion_logica -> . PARIZQ expresion_logica PARDER ORD PARIZQ expresion_logica PARDER
    (36) expresion_logica -> . PARIZQ expresion_logica PARDER NOT PARIZQ expresion_logica PARDER
    (15) expresion -> . ENTERO
    (16) expresion -> . DECIMAL
    (17) expresion -> . CADENA
    (18) expresion -> . ID
    (20) expresion -> . PARIZQ expresion PARDER
    (37) expresion -> . expresion MAS expresion
    (38) expresion -> . expresion MENOS expresion
    (39) expresion -> . expresion POR expresion
    (40) expresion -> . expresion DIVIDIDO expresion

    PARIZQ          shift and go to state 24
    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA          shift and go to state 21
    ID              shift and go to state 22

    expresion_logica               shift and go to state 25
    expresion                      shift and go to state 26

state 16

    (13) while_instr -> WHILE PARIZQ . expresion_logica PARDER LLAVIZQ statement LLAVDER
    (21) expresion_logica -> . expresion MENQUE expresion
    (22) expresion_logica -> . expresion MAYQUE expresion
    (23) expresion_logica -> . expresion IGUALQUE expresion
    (24) expresion_logica -> . expresion NIGUALQUE expresion
    (25) expresion_logica -> . expresion MAYIGUAL expresion
    (26) expresion_logica -> . expresion MENIGUAL expresion
    (27) expresion_logica -> . PARIZQ expresion_logica PARDER
    (28) expresion_logica -> . PARIZQ expresion_logica PARDER MENQUE PARIZQ expresion_logica PARDER
    (29) expresion_logica -> . PARIZQ expresion_logica PARDER MAYQUE PARIZQ expresion_logica PARDER
    (30) expresion_logica -> . PARIZQ expresion_logica PARDER IGUALQUE PARIZQ expresion_logica PARDER
    (31) expresion_logica -> . PARIZQ expresion_logica PARDER NIGUALQUE PARIZQ expresion_logica PARDER
    (32) expresion_logica -> . PARIZQ expresion_logica PARDER MAYIGUAL PARIZQ expresion_logica PARDER
    (33) expresion_logica -> . PARIZQ expresion_logica PARDER MENIGUAL PARIZQ expresion_logica PARDER
    (34) expresion_logica -> . PARIZQ expresion_logica PARDER AND PARIZQ expresion_logica PARDER
    (35) expresion_logica -> . PARIZQ expresion_logica PARDER ORD PARIZQ expresion_logica PARDER
    (36) expresion_logica -> . PARIZQ expresion_logica PARDER NOT PARIZQ expresion_logica PARDER
    (15) expresion -> . ENTERO
    (16) expresion -> . DECIMAL
    (17) expresion -> . CADENA
    (18) expresion -> . ID
    (20) expresion -> . PARIZQ expresion PARDER
    (37) expresion -> . expresion MAS expresion
    (38) expresion -> . expresion MENOS expresion
    (39) expresion -> . expresion POR expresion
    (40) expresion -> . expresion DIVIDIDO expresion

    PARIZQ          shift and go to state 24
    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA          shift and go to state 21
    ID              shift and go to state 22

    expresion_logica               shift and go to state 27
    expresion                      shift and go to state 26

state 17

    (20) expresion -> PARIZQ . expresion PARDER
    (15) expresion -> . ENTERO
    (16) expresion -> . DECIMAL
    (17) expresion -> . CADENA
    (18) expresion -> . ID
    (20) expresion -> . PARIZQ expresion PARDER
    (37) expresion -> . expresion MAS expresion
    (38) expresion -> . expresion MENOS expresion
    (39) expresion -> . expresion POR expresion
    (40) expresion -> . expresion DIVIDIDO expresion

    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA          shift and go to state 21
    ID              shift and go to state 22
    PARIZQ          shift and go to state 17

    expresion                      shift and go to state 28

state 18

    (19) imprimir_instr -> PRINT PARIZQ expresion . PARDER PTCOMA
    (37) expresion -> expresion . MAS expresion
    (38) expresion -> expresion . MENOS expresion
    (39) expresion -> expresion . POR expresion
    (40) expresion -> expresion . DIVIDIDO expresion

    PARDER          shift and go to state 29
    MAS             shift and go to state 30
    MENOS           shift and go to state 31
    POR             shift and go to state 32
    DIVIDIDO        shift and go to state 33


state 19

    (15) expresion -> ENTERO .

    PARDER          reduce using rule 15 (expresion -> ENTERO .)
    MAS             reduce using rule 15 (expresion -> ENTERO .)
    MENOS           reduce using rule 15 (expresion -> ENTERO .)
    POR             reduce using rule 15 (expresion -> ENTERO .)
    DIVIDIDO        reduce using rule 15 (expresion -> ENTERO .)
    PTCOMA          reduce using rule 15 (expresion -> ENTERO .)
    MENQUE          reduce using rule 15 (expresion -> ENTERO .)
    MAYQUE          reduce using rule 15 (expresion -> ENTERO .)
    IGUALQUE        reduce using rule 15 (expresion -> ENTERO .)
    NIGUALQUE       reduce using rule 15 (expresion -> ENTERO .)
    MAYIGUAL        reduce using rule 15 (expresion -> ENTERO .)
    MENIGUAL        reduce using rule 15 (expresion -> ENTERO .)
    LLAVDER         reduce using rule 15 (expresion -> ENTERO .)


state 20

    (16) expresion -> DECIMAL .

    PARDER          reduce using rule 16 (expresion -> DECIMAL .)
    MAS             reduce using rule 16 (expresion -> DECIMAL .)
    MENOS           reduce using rule 16 (expresion -> DECIMAL .)
    POR             reduce using rule 16 (expresion -> DECIMAL .)
    DIVIDIDO        reduce using rule 16 (expresion -> DECIMAL .)
    PTCOMA          reduce using rule 16 (expresion -> DECIMAL .)
    MENQUE          reduce using rule 16 (expresion -> DECIMAL .)
    MAYQUE          reduce using rule 16 (expresion -> DECIMAL .)
    IGUALQUE        reduce using rule 16 (expresion -> DECIMAL .)
    NIGUALQUE       reduce using rule 16 (expresion -> DECIMAL .)
    MAYIGUAL        reduce using rule 16 (expresion -> DECIMAL .)
    MENIGUAL        reduce using rule 16 (expresion -> DECIMAL .)
    LLAVDER         reduce using rule 16 (expresion -> DECIMAL .)


state 21

    (17) expresion -> CADENA .

    PARDER          reduce using rule 17 (expresion -> CADENA .)
    MAS             reduce using rule 17 (expresion -> CADENA .)
    MENOS           reduce using rule 17 (expresion -> CADENA .)
    POR             reduce using rule 17 (expresion -> CADENA .)
    DIVIDIDO        reduce using rule 17 (expresion -> CADENA .)
    PTCOMA          reduce using rule 17 (expresion -> CADENA .)
    MENQUE          reduce using rule 17 (expresion -> CADENA .)
    MAYQUE          reduce using rule 17 (expresion -> CADENA .)
    IGUALQUE        reduce using rule 17 (expresion -> CADENA .)
    NIGUALQUE       reduce using rule 17 (expresion -> CADENA .)
    MAYIGUAL        reduce using rule 17 (expresion -> CADENA .)
    MENIGUAL        reduce using rule 17 (expresion -> CADENA .)
    LLAVDER         reduce using rule 17 (expresion -> CADENA .)


state 22

    (18) expresion -> ID .

    PARDER          reduce using rule 18 (expresion -> ID .)
    MAS             reduce using rule 18 (expresion -> ID .)
    MENOS           reduce using rule 18 (expresion -> ID .)
    POR             reduce using rule 18 (expresion -> ID .)
    DIVIDIDO        reduce using rule 18 (expresion -> ID .)
    PTCOMA          reduce using rule 18 (expresion -> ID .)
    MENQUE          reduce using rule 18 (expresion -> ID .)
    MAYQUE          reduce using rule 18 (expresion -> ID .)
    IGUALQUE        reduce using rule 18 (expresion -> ID .)
    NIGUALQUE       reduce using rule 18 (expresion -> ID .)
    MAYIGUAL        reduce using rule 18 (expresion -> ID .)
    MENIGUAL        reduce using rule 18 (expresion -> ID .)
    LLAVDER         reduce using rule 18 (expresion -> ID .)


state 23

    (14) asignacion_instr -> ID IGUAL expresion . PTCOMA
    (37) expresion -> expresion . MAS expresion
    (38) expresion -> expresion . MENOS expresion
    (39) expresion -> expresion . POR expresion
    (40) expresion -> expresion . DIVIDIDO expresion

    PTCOMA          shift and go to state 34
    MAS             shift and go to state 30
    MENOS           shift and go to state 31
    POR             shift and go to state 32
    DIVIDIDO        shift and go to state 33


state 24

    (27) expresion_logica -> PARIZQ . expresion_logica PARDER
    (28) expresion_logica -> PARIZQ . expresion_logica PARDER MENQUE PARIZQ expresion_logica PARDER
    (29) expresion_logica -> PARIZQ . expresion_logica PARDER MAYQUE PARIZQ expresion_logica PARDER
    (30) expresion_logica -> PARIZQ . expresion_logica PARDER IGUALQUE PARIZQ expresion_logica PARDER
    (31) expresion_logica -> PARIZQ . expresion_logica PARDER NIGUALQUE PARIZQ expresion_logica PARDER
    (32) expresion_logica -> PARIZQ . expresion_logica PARDER MAYIGUAL PARIZQ expresion_logica PARDER
    (33) expresion_logica -> PARIZQ . expresion_logica PARDER MENIGUAL PARIZQ expresion_logica PARDER
    (34) expresion_logica -> PARIZQ . expresion_logica PARDER AND PARIZQ expresion_logica PARDER
    (35) expresion_logica -> PARIZQ . expresion_logica PARDER ORD PARIZQ expresion_logica PARDER
    (36) expresion_logica -> PARIZQ . expresion_logica PARDER NOT PARIZQ expresion_logica PARDER
    (20) expresion -> PARIZQ . expresion PARDER
    (21) expresion_logica -> . expresion MENQUE expresion
    (22) expresion_logica -> . expresion MAYQUE expresion
    (23) expresion_logica -> . expresion IGUALQUE expresion
    (24) expresion_logica -> . expresion NIGUALQUE expresion
    (25) expresion_logica -> . expresion MAYIGUAL expresion
    (26) expresion_logica -> . expresion MENIGUAL expresion
    (27) expresion_logica -> . PARIZQ expresion_logica PARDER
    (28) expresion_logica -> . PARIZQ expresion_logica PARDER MENQUE PARIZQ expresion_logica PARDER
    (29) expresion_logica -> . PARIZQ expresion_logica PARDER MAYQUE PARIZQ expresion_logica PARDER
    (30) expresion_logica -> . PARIZQ expresion_logica PARDER IGUALQUE PARIZQ expresion_logica PARDER
    (31) expresion_logica -> . PARIZQ expresion_logica PARDER NIGUALQUE PARIZQ expresion_logica PARDER
    (32) expresion_logica -> . PARIZQ expresion_logica PARDER MAYIGUAL PARIZQ expresion_logica PARDER
    (33) expresion_logica -> . PARIZQ expresion_logica PARDER MENIGUAL PARIZQ expresion_logica PARDER
    (34) expresion_logica -> . PARIZQ expresion_logica PARDER AND PARIZQ expresion_logica PARDER
    (35) expresion_logica -> . PARIZQ expresion_logica PARDER ORD PARIZQ expresion_logica PARDER
    (36) expresion_logica -> . PARIZQ expresion_logica PARDER NOT PARIZQ expresion_logica PARDER
    (15) expresion -> . ENTERO
    (16) expresion -> . DECIMAL
    (17) expresion -> . CADENA
    (18) expresion -> . ID
    (20) expresion -> . PARIZQ expresion PARDER
    (37) expresion -> . expresion MAS expresion
    (38) expresion -> . expresion MENOS expresion
    (39) expresion -> . expresion POR expresion
    (40) expresion -> . expresion DIVIDIDO expresion

    PARIZQ          shift and go to state 24
    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA          shift and go to state 21
    ID              shift and go to state 22

    expresion_logica               shift and go to state 35
    expresion                      shift and go to state 36

state 25

    (8) if_instr -> IF PARIZQ expresion_logica . PARDER LLAVIZQ statement LLAVDER

    PARDER          shift and go to state 37


state 26

    (21) expresion_logica -> expresion . MENQUE expresion
    (22) expresion_logica -> expresion . MAYQUE expresion
    (23) expresion_logica -> expresion . IGUALQUE expresion
    (24) expresion_logica -> expresion . NIGUALQUE expresion
    (25) expresion_logica -> expresion . MAYIGUAL expresion
    (26) expresion_logica -> expresion . MENIGUAL expresion
    (37) expresion -> expresion . MAS expresion
    (38) expresion -> expresion . MENOS expresion
    (39) expresion -> expresion . POR expresion
    (40) expresion -> expresion . DIVIDIDO expresion

    MENQUE          shift and go to state 38
    MAYQUE          shift and go to state 39
    IGUALQUE        shift and go to state 40
    NIGUALQUE       shift and go to state 41
    MAYIGUAL        shift and go to state 42
    MENIGUAL        shift and go to state 43
    MAS             shift and go to state 30
    MENOS           shift and go to state 31
    POR             shift and go to state 32
    DIVIDIDO        shift and go to state 33


state 27

    (13) while_instr -> WHILE PARIZQ expresion_logica . PARDER LLAVIZQ statement LLAVDER

    PARDER          shift and go to state 44


state 28

    (20) expresion -> PARIZQ expresion . PARDER
    (37) expresion -> expresion . MAS expresion
    (38) expresion -> expresion . MENOS expresion
    (39) expresion -> expresion . POR expresion
    (40) expresion -> expresion . DIVIDIDO expresion

    PARDER          shift and go to state 45
    MAS             shift and go to state 30
    MENOS           shift and go to state 31
    POR             shift and go to state 32
    DIVIDIDO        shift and go to state 33


state 29

    (19) imprimir_instr -> PRINT PARIZQ expresion PARDER . PTCOMA

    PTCOMA          shift and go to state 46


state 30

    (37) expresion -> expresion MAS . expresion
    (15) expresion -> . ENTERO
    (16) expresion -> . DECIMAL
    (17) expresion -> . CADENA
    (18) expresion -> . ID
    (20) expresion -> . PARIZQ expresion PARDER
    (37) expresion -> . expresion MAS expresion
    (38) expresion -> . expresion MENOS expresion
    (39) expresion -> . expresion POR expresion
    (40) expresion -> . expresion DIVIDIDO expresion

    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA          shift and go to state 21
    ID              shift and go to state 22
    PARIZQ          shift and go to state 17

    expresion                      shift and go to state 47

state 31

    (38) expresion -> expresion MENOS . expresion
    (15) expresion -> . ENTERO
    (16) expresion -> . DECIMAL
    (17) expresion -> . CADENA
    (18) expresion -> . ID
    (20) expresion -> . PARIZQ expresion PARDER
    (37) expresion -> . expresion MAS expresion
    (38) expresion -> . expresion MENOS expresion
    (39) expresion -> . expresion POR expresion
    (40) expresion -> . expresion DIVIDIDO expresion

    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA          shift and go to state 21
    ID              shift and go to state 22
    PARIZQ          shift and go to state 17

    expresion                      shift and go to state 48

state 32

    (39) expresion -> expresion POR . expresion
    (15) expresion -> . ENTERO
    (16) expresion -> . DECIMAL
    (17) expresion -> . CADENA
    (18) expresion -> . ID
    (20) expresion -> . PARIZQ expresion PARDER
    (37) expresion -> . expresion MAS expresion
    (38) expresion -> . expresion MENOS expresion
    (39) expresion -> . expresion POR expresion
    (40) expresion -> . expresion DIVIDIDO expresion

    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA          shift and go to state 21
    ID              shift and go to state 22
    PARIZQ          shift and go to state 17

    expresion                      shift and go to state 49

state 33

    (40) expresion -> expresion DIVIDIDO . expresion
    (15) expresion -> . ENTERO
    (16) expresion -> . DECIMAL
    (17) expresion -> . CADENA
    (18) expresion -> . ID
    (20) expresion -> . PARIZQ expresion PARDER
    (37) expresion -> . expresion MAS expresion
    (38) expresion -> . expresion MENOS expresion
    (39) expresion -> . expresion POR expresion
    (40) expresion -> . expresion DIVIDIDO expresion

    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA          shift and go to state 21
    ID              shift and go to state 22
    PARIZQ          shift and go to state 17

    expresion                      shift and go to state 50

state 34

    (14) asignacion_instr -> ID IGUAL expresion PTCOMA .

    PRINT           reduce using rule 14 (asignacion_instr -> ID IGUAL expresion PTCOMA .)
    ID              reduce using rule 14 (asignacion_instr -> ID IGUAL expresion PTCOMA .)
    IF              reduce using rule 14 (asignacion_instr -> ID IGUAL expresion PTCOMA .)
    WHILE           reduce using rule 14 (asignacion_instr -> ID IGUAL expresion PTCOMA .)
    $end            reduce using rule 14 (asignacion_instr -> ID IGUAL expresion PTCOMA .)


state 35

    (27) expresion_logica -> PARIZQ expresion_logica . PARDER
    (28) expresion_logica -> PARIZQ expresion_logica . PARDER MENQUE PARIZQ expresion_logica PARDER
    (29) expresion_logica -> PARIZQ expresion_logica . PARDER MAYQUE PARIZQ expresion_logica PARDER
    (30) expresion_logica -> PARIZQ expresion_logica . PARDER IGUALQUE PARIZQ expresion_logica PARDER
    (31) expresion_logica -> PARIZQ expresion_logica . PARDER NIGUALQUE PARIZQ expresion_logica PARDER
    (32) expresion_logica -> PARIZQ expresion_logica . PARDER MAYIGUAL PARIZQ expresion_logica PARDER
    (33) expresion_logica -> PARIZQ expresion_logica . PARDER MENIGUAL PARIZQ expresion_logica PARDER
    (34) expresion_logica -> PARIZQ expresion_logica . PARDER AND PARIZQ expresion_logica PARDER
    (35) expresion_logica -> PARIZQ expresion_logica . PARDER ORD PARIZQ expresion_logica PARDER
    (36) expresion_logica -> PARIZQ expresion_logica . PARDER NOT PARIZQ expresion_logica PARDER

    PARDER          shift and go to state 51


state 36

    (20) expresion -> PARIZQ expresion . PARDER
    (21) expresion_logica -> expresion . MENQUE expresion
    (22) expresion_logica -> expresion . MAYQUE expresion
    (23) expresion_logica -> expresion . IGUALQUE expresion
    (24) expresion_logica -> expresion . NIGUALQUE expresion
    (25) expresion_logica -> expresion . MAYIGUAL expresion
    (26) expresion_logica -> expresion . MENIGUAL expresion
    (37) expresion -> expresion . MAS expresion
    (38) expresion -> expresion . MENOS expresion
    (39) expresion -> expresion . POR expresion
    (40) expresion -> expresion . DIVIDIDO expresion

    PARDER          shift and go to state 45
    MENQUE          shift and go to state 38
    MAYQUE          shift and go to state 39
    IGUALQUE        shift and go to state 40
    NIGUALQUE       shift and go to state 41
    MAYIGUAL        shift and go to state 42
    MENIGUAL        shift and go to state 43
    MAS             shift and go to state 30
    MENOS           shift and go to state 31
    POR             shift and go to state 32
    DIVIDIDO        shift and go to state 33


state 37

    (8) if_instr -> IF PARIZQ expresion_logica PARDER . LLAVIZQ statement LLAVDER

    LLAVIZQ         shift and go to state 52


state 38

    (21) expresion_logica -> expresion MENQUE . expresion
    (15) expresion -> . ENTERO
    (16) expresion -> . DECIMAL
    (17) expresion -> . CADENA
    (18) expresion -> . ID
    (20) expresion -> . PARIZQ expresion PARDER
    (37) expresion -> . expresion MAS expresion
    (38) expresion -> . expresion MENOS expresion
    (39) expresion -> . expresion POR expresion
    (40) expresion -> . expresion DIVIDIDO expresion

    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA          shift and go to state 21
    ID              shift and go to state 22
    PARIZQ          shift and go to state 17

    expresion                      shift and go to state 53

state 39

    (22) expresion_logica -> expresion MAYQUE . expresion
    (15) expresion -> . ENTERO
    (16) expresion -> . DECIMAL
    (17) expresion -> . CADENA
    (18) expresion -> . ID
    (20) expresion -> . PARIZQ expresion PARDER
    (37) expresion -> . expresion MAS expresion
    (38) expresion -> . expresion MENOS expresion
    (39) expresion -> . expresion POR expresion
    (40) expresion -> . expresion DIVIDIDO expresion

    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA          shift and go to state 21
    ID              shift and go to state 22
    PARIZQ          shift and go to state 17

    expresion                      shift and go to state 54

state 40

    (23) expresion_logica -> expresion IGUALQUE . expresion
    (15) expresion -> . ENTERO
    (16) expresion -> . DECIMAL
    (17) expresion -> . CADENA
    (18) expresion -> . ID
    (20) expresion -> . PARIZQ expresion PARDER
    (37) expresion -> . expresion MAS expresion
    (38) expresion -> . expresion MENOS expresion
    (39) expresion -> . expresion POR expresion
    (40) expresion -> . expresion DIVIDIDO expresion

    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA          shift and go to state 21
    ID              shift and go to state 22
    PARIZQ          shift and go to state 17

    expresion                      shift and go to state 55

state 41

    (24) expresion_logica -> expresion NIGUALQUE . expresion
    (15) expresion -> . ENTERO
    (16) expresion -> . DECIMAL
    (17) expresion -> . CADENA
    (18) expresion -> . ID
    (20) expresion -> . PARIZQ expresion PARDER
    (37) expresion -> . expresion MAS expresion
    (38) expresion -> . expresion MENOS expresion
    (39) expresion -> . expresion POR expresion
    (40) expresion -> . expresion DIVIDIDO expresion

    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA          shift and go to state 21
    ID              shift and go to state 22
    PARIZQ          shift and go to state 17

    expresion                      shift and go to state 56

state 42

    (25) expresion_logica -> expresion MAYIGUAL . expresion
    (15) expresion -> . ENTERO
    (16) expresion -> . DECIMAL
    (17) expresion -> . CADENA
    (18) expresion -> . ID
    (20) expresion -> . PARIZQ expresion PARDER
    (37) expresion -> . expresion MAS expresion
    (38) expresion -> . expresion MENOS expresion
    (39) expresion -> . expresion POR expresion
    (40) expresion -> . expresion DIVIDIDO expresion

    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA          shift and go to state 21
    ID              shift and go to state 22
    PARIZQ          shift and go to state 17

    expresion                      shift and go to state 57

state 43

    (26) expresion_logica -> expresion MENIGUAL . expresion
    (15) expresion -> . ENTERO
    (16) expresion -> . DECIMAL
    (17) expresion -> . CADENA
    (18) expresion -> . ID
    (20) expresion -> . PARIZQ expresion PARDER
    (37) expresion -> . expresion MAS expresion
    (38) expresion -> . expresion MENOS expresion
    (39) expresion -> . expresion POR expresion
    (40) expresion -> . expresion DIVIDIDO expresion

    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA          shift and go to state 21
    ID              shift and go to state 22
    PARIZQ          shift and go to state 17

    expresion                      shift and go to state 58

state 44

    (13) while_instr -> WHILE PARIZQ expresion_logica PARDER . LLAVIZQ statement LLAVDER

    LLAVIZQ         shift and go to state 59


state 45

    (20) expresion -> PARIZQ expresion PARDER .

    PARDER          reduce using rule 20 (expresion -> PARIZQ expresion PARDER .)
    MAS             reduce using rule 20 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 20 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 20 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 20 (expresion -> PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 20 (expresion -> PARIZQ expresion PARDER .)
    MENQUE          reduce using rule 20 (expresion -> PARIZQ expresion PARDER .)
    MAYQUE          reduce using rule 20 (expresion -> PARIZQ expresion PARDER .)
    IGUALQUE        reduce using rule 20 (expresion -> PARIZQ expresion PARDER .)
    NIGUALQUE       reduce using rule 20 (expresion -> PARIZQ expresion PARDER .)
    MAYIGUAL        reduce using rule 20 (expresion -> PARIZQ expresion PARDER .)
    MENIGUAL        reduce using rule 20 (expresion -> PARIZQ expresion PARDER .)
    LLAVDER         reduce using rule 20 (expresion -> PARIZQ expresion PARDER .)


state 46

    (19) imprimir_instr -> PRINT PARIZQ expresion PARDER PTCOMA .

    PRINT           reduce using rule 19 (imprimir_instr -> PRINT PARIZQ expresion PARDER PTCOMA .)
    ID              reduce using rule 19 (imprimir_instr -> PRINT PARIZQ expresion PARDER PTCOMA .)
    IF              reduce using rule 19 (imprimir_instr -> PRINT PARIZQ expresion PARDER PTCOMA .)
    WHILE           reduce using rule 19 (imprimir_instr -> PRINT PARIZQ expresion PARDER PTCOMA .)
    $end            reduce using rule 19 (imprimir_instr -> PRINT PARIZQ expresion PARDER PTCOMA .)
    LLAVDER         reduce using rule 19 (imprimir_instr -> PRINT PARIZQ expresion PARDER PTCOMA .)


state 47

    (37) expresion -> expresion MAS expresion .
    (37) expresion -> expresion . MAS expresion
    (38) expresion -> expresion . MENOS expresion
    (39) expresion -> expresion . POR expresion
    (40) expresion -> expresion . DIVIDIDO expresion

    PARDER          reduce using rule 37 (expresion -> expresion MAS expresion .)
    MAS             reduce using rule 37 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 37 (expresion -> expresion MAS expresion .)
    PTCOMA          reduce using rule 37 (expresion -> expresion MAS expresion .)
    MENQUE          reduce using rule 37 (expresion -> expresion MAS expresion .)
    MAYQUE          reduce using rule 37 (expresion -> expresion MAS expresion .)
    IGUALQUE        reduce using rule 37 (expresion -> expresion MAS expresion .)
    NIGUALQUE       reduce using rule 37 (expresion -> expresion MAS expresion .)
    MAYIGUAL        reduce using rule 37 (expresion -> expresion MAS expresion .)
    MENIGUAL        reduce using rule 37 (expresion -> expresion MAS expresion .)
    LLAVDER         reduce using rule 37 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 32
    DIVIDIDO        shift and go to state 33

  ! POR             [ reduce using rule 37 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 37 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 30 ]
  ! MENOS           [ shift and go to state 31 ]


state 48

    (38) expresion -> expresion MENOS expresion .
    (37) expresion -> expresion . MAS expresion
    (38) expresion -> expresion . MENOS expresion
    (39) expresion -> expresion . POR expresion
    (40) expresion -> expresion . DIVIDIDO expresion

    PARDER          reduce using rule 38 (expresion -> expresion MENOS expresion .)
    MAS             reduce using rule 38 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 38 (expresion -> expresion MENOS expresion .)
    PTCOMA          reduce using rule 38 (expresion -> expresion MENOS expresion .)
    MENQUE          reduce using rule 38 (expresion -> expresion MENOS expresion .)
    MAYQUE          reduce using rule 38 (expresion -> expresion MENOS expresion .)
    IGUALQUE        reduce using rule 38 (expresion -> expresion MENOS expresion .)
    NIGUALQUE       reduce using rule 38 (expresion -> expresion MENOS expresion .)
    MAYIGUAL        reduce using rule 38 (expresion -> expresion MENOS expresion .)
    MENIGUAL        reduce using rule 38 (expresion -> expresion MENOS expresion .)
    LLAVDER         reduce using rule 38 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 32
    DIVIDIDO        shift and go to state 33

  ! POR             [ reduce using rule 38 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 38 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 30 ]
  ! MENOS           [ shift and go to state 31 ]


state 49

    (39) expresion -> expresion POR expresion .
    (37) expresion -> expresion . MAS expresion
    (38) expresion -> expresion . MENOS expresion
    (39) expresion -> expresion . POR expresion
    (40) expresion -> expresion . DIVIDIDO expresion

    PARDER          reduce using rule 39 (expresion -> expresion POR expresion .)
    MAS             reduce using rule 39 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 39 (expresion -> expresion POR expresion .)
    POR             reduce using rule 39 (expresion -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 39 (expresion -> expresion POR expresion .)
    PTCOMA          reduce using rule 39 (expresion -> expresion POR expresion .)
    MENQUE          reduce using rule 39 (expresion -> expresion POR expresion .)
    MAYQUE          reduce using rule 39 (expresion -> expresion POR expresion .)
    IGUALQUE        reduce using rule 39 (expresion -> expresion POR expresion .)
    NIGUALQUE       reduce using rule 39 (expresion -> expresion POR expresion .)
    MAYIGUAL        reduce using rule 39 (expresion -> expresion POR expresion .)
    MENIGUAL        reduce using rule 39 (expresion -> expresion POR expresion .)
    LLAVDER         reduce using rule 39 (expresion -> expresion POR expresion .)

  ! MAS             [ shift and go to state 30 ]
  ! MENOS           [ shift and go to state 31 ]
  ! POR             [ shift and go to state 32 ]
  ! DIVIDIDO        [ shift and go to state 33 ]


state 50

    (40) expresion -> expresion DIVIDIDO expresion .
    (37) expresion -> expresion . MAS expresion
    (38) expresion -> expresion . MENOS expresion
    (39) expresion -> expresion . POR expresion
    (40) expresion -> expresion . DIVIDIDO expresion

    PARDER          reduce using rule 40 (expresion -> expresion DIVIDIDO expresion .)
    MAS             reduce using rule 40 (expresion -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 40 (expresion -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 40 (expresion -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 40 (expresion -> expresion DIVIDIDO expresion .)
    PTCOMA          reduce using rule 40 (expresion -> expresion DIVIDIDO expresion .)
    MENQUE          reduce using rule 40 (expresion -> expresion DIVIDIDO expresion .)
    MAYQUE          reduce using rule 40 (expresion -> expresion DIVIDIDO expresion .)
    IGUALQUE        reduce using rule 40 (expresion -> expresion DIVIDIDO expresion .)
    NIGUALQUE       reduce using rule 40 (expresion -> expresion DIVIDIDO expresion .)
    MAYIGUAL        reduce using rule 40 (expresion -> expresion DIVIDIDO expresion .)
    MENIGUAL        reduce using rule 40 (expresion -> expresion DIVIDIDO expresion .)
    LLAVDER         reduce using rule 40 (expresion -> expresion DIVIDIDO expresion .)

  ! MAS             [ shift and go to state 30 ]
  ! MENOS           [ shift and go to state 31 ]
  ! POR             [ shift and go to state 32 ]
  ! DIVIDIDO        [ shift and go to state 33 ]


state 51

    (27) expresion_logica -> PARIZQ expresion_logica PARDER .
    (28) expresion_logica -> PARIZQ expresion_logica PARDER . MENQUE PARIZQ expresion_logica PARDER
    (29) expresion_logica -> PARIZQ expresion_logica PARDER . MAYQUE PARIZQ expresion_logica PARDER
    (30) expresion_logica -> PARIZQ expresion_logica PARDER . IGUALQUE PARIZQ expresion_logica PARDER
    (31) expresion_logica -> PARIZQ expresion_logica PARDER . NIGUALQUE PARIZQ expresion_logica PARDER
    (32) expresion_logica -> PARIZQ expresion_logica PARDER . MAYIGUAL PARIZQ expresion_logica PARDER
    (33) expresion_logica -> PARIZQ expresion_logica PARDER . MENIGUAL PARIZQ expresion_logica PARDER
    (34) expresion_logica -> PARIZQ expresion_logica PARDER . AND PARIZQ expresion_logica PARDER
    (35) expresion_logica -> PARIZQ expresion_logica PARDER . ORD PARIZQ expresion_logica PARDER
    (36) expresion_logica -> PARIZQ expresion_logica PARDER . NOT PARIZQ expresion_logica PARDER

    PARDER          reduce using rule 27 (expresion_logica -> PARIZQ expresion_logica PARDER .)
    MENQUE          shift and go to state 60
    MAYQUE          shift and go to state 61
    IGUALQUE        shift and go to state 62
    NIGUALQUE       shift and go to state 63
    MAYIGUAL        shift and go to state 64
    MENIGUAL        shift and go to state 65
    AND             shift and go to state 66
    ORD             shift and go to state 67
    NOT             shift and go to state 68


state 52

    (8) if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ . statement LLAVDER
    (9) statement -> . imprimir_instr
    (10) statement -> . if_instr
    (11) statement -> . expresion
    (12) statement -> . while_instr
    (19) imprimir_instr -> . PRINT PARIZQ expresion PARDER PTCOMA
    (8) if_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ statement LLAVDER
    (15) expresion -> . ENTERO
    (16) expresion -> . DECIMAL
    (17) expresion -> . CADENA
    (18) expresion -> . ID
    (20) expresion -> . PARIZQ expresion PARDER
    (37) expresion -> . expresion MAS expresion
    (38) expresion -> . expresion MENOS expresion
    (39) expresion -> . expresion POR expresion
    (40) expresion -> . expresion DIVIDIDO expresion
    (13) while_instr -> . WHILE PARIZQ expresion_logica PARDER LLAVIZQ statement LLAVDER

    PRINT           shift and go to state 8
    IF              shift and go to state 10
    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA          shift and go to state 21
    ID              shift and go to state 22
    PARIZQ          shift and go to state 17
    WHILE           shift and go to state 11

    statement                      shift and go to state 69
    imprimir_instr                 shift and go to state 70
    if_instr                       shift and go to state 71
    expresion                      shift and go to state 72
    while_instr                    shift and go to state 73

state 53

    (21) expresion_logica -> expresion MENQUE expresion .
    (37) expresion -> expresion . MAS expresion
    (38) expresion -> expresion . MENOS expresion
    (39) expresion -> expresion . POR expresion
    (40) expresion -> expresion . DIVIDIDO expresion

    PARDER          reduce using rule 21 (expresion_logica -> expresion MENQUE expresion .)
    MAS             shift and go to state 30
    MENOS           shift and go to state 31
    POR             shift and go to state 32
    DIVIDIDO        shift and go to state 33


state 54

    (22) expresion_logica -> expresion MAYQUE expresion .
    (37) expresion -> expresion . MAS expresion
    (38) expresion -> expresion . MENOS expresion
    (39) expresion -> expresion . POR expresion
    (40) expresion -> expresion . DIVIDIDO expresion

    PARDER          reduce using rule 22 (expresion_logica -> expresion MAYQUE expresion .)
    MAS             shift and go to state 30
    MENOS           shift and go to state 31
    POR             shift and go to state 32
    DIVIDIDO        shift and go to state 33


state 55

    (23) expresion_logica -> expresion IGUALQUE expresion .
    (37) expresion -> expresion . MAS expresion
    (38) expresion -> expresion . MENOS expresion
    (39) expresion -> expresion . POR expresion
    (40) expresion -> expresion . DIVIDIDO expresion

    PARDER          reduce using rule 23 (expresion_logica -> expresion IGUALQUE expresion .)
    MAS             shift and go to state 30
    MENOS           shift and go to state 31
    POR             shift and go to state 32
    DIVIDIDO        shift and go to state 33


state 56

    (24) expresion_logica -> expresion NIGUALQUE expresion .
    (37) expresion -> expresion . MAS expresion
    (38) expresion -> expresion . MENOS expresion
    (39) expresion -> expresion . POR expresion
    (40) expresion -> expresion . DIVIDIDO expresion

    PARDER          reduce using rule 24 (expresion_logica -> expresion NIGUALQUE expresion .)
    MAS             shift and go to state 30
    MENOS           shift and go to state 31
    POR             shift and go to state 32
    DIVIDIDO        shift and go to state 33


state 57

    (25) expresion_logica -> expresion MAYIGUAL expresion .
    (37) expresion -> expresion . MAS expresion
    (38) expresion -> expresion . MENOS expresion
    (39) expresion -> expresion . POR expresion
    (40) expresion -> expresion . DIVIDIDO expresion

    PARDER          reduce using rule 25 (expresion_logica -> expresion MAYIGUAL expresion .)
    MAS             shift and go to state 30
    MENOS           shift and go to state 31
    POR             shift and go to state 32
    DIVIDIDO        shift and go to state 33


state 58

    (26) expresion_logica -> expresion MENIGUAL expresion .
    (37) expresion -> expresion . MAS expresion
    (38) expresion -> expresion . MENOS expresion
    (39) expresion -> expresion . POR expresion
    (40) expresion -> expresion . DIVIDIDO expresion

    PARDER          reduce using rule 26 (expresion_logica -> expresion MENIGUAL expresion .)
    MAS             shift and go to state 30
    MENOS           shift and go to state 31
    POR             shift and go to state 32
    DIVIDIDO        shift and go to state 33


state 59

    (13) while_instr -> WHILE PARIZQ expresion_logica PARDER LLAVIZQ . statement LLAVDER
    (9) statement -> . imprimir_instr
    (10) statement -> . if_instr
    (11) statement -> . expresion
    (12) statement -> . while_instr
    (19) imprimir_instr -> . PRINT PARIZQ expresion PARDER PTCOMA
    (8) if_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ statement LLAVDER
    (15) expresion -> . ENTERO
    (16) expresion -> . DECIMAL
    (17) expresion -> . CADENA
    (18) expresion -> . ID
    (20) expresion -> . PARIZQ expresion PARDER
    (37) expresion -> . expresion MAS expresion
    (38) expresion -> . expresion MENOS expresion
    (39) expresion -> . expresion POR expresion
    (40) expresion -> . expresion DIVIDIDO expresion
    (13) while_instr -> . WHILE PARIZQ expresion_logica PARDER LLAVIZQ statement LLAVDER

    PRINT           shift and go to state 8
    IF              shift and go to state 10
    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA          shift and go to state 21
    ID              shift and go to state 22
    PARIZQ          shift and go to state 17
    WHILE           shift and go to state 11

    statement                      shift and go to state 74
    imprimir_instr                 shift and go to state 70
    if_instr                       shift and go to state 71
    expresion                      shift and go to state 72
    while_instr                    shift and go to state 73

state 60

    (28) expresion_logica -> PARIZQ expresion_logica PARDER MENQUE . PARIZQ expresion_logica PARDER

    PARIZQ          shift and go to state 75


state 61

    (29) expresion_logica -> PARIZQ expresion_logica PARDER MAYQUE . PARIZQ expresion_logica PARDER

    PARIZQ          shift and go to state 76


state 62

    (30) expresion_logica -> PARIZQ expresion_logica PARDER IGUALQUE . PARIZQ expresion_logica PARDER

    PARIZQ          shift and go to state 77


state 63

    (31) expresion_logica -> PARIZQ expresion_logica PARDER NIGUALQUE . PARIZQ expresion_logica PARDER

    PARIZQ          shift and go to state 78


state 64

    (32) expresion_logica -> PARIZQ expresion_logica PARDER MAYIGUAL . PARIZQ expresion_logica PARDER

    PARIZQ          shift and go to state 79


state 65

    (33) expresion_logica -> PARIZQ expresion_logica PARDER MENIGUAL . PARIZQ expresion_logica PARDER

    PARIZQ          shift and go to state 80


state 66

    (34) expresion_logica -> PARIZQ expresion_logica PARDER AND . PARIZQ expresion_logica PARDER

    PARIZQ          shift and go to state 81


state 67

    (35) expresion_logica -> PARIZQ expresion_logica PARDER ORD . PARIZQ expresion_logica PARDER

    PARIZQ          shift and go to state 82


state 68

    (36) expresion_logica -> PARIZQ expresion_logica PARDER NOT . PARIZQ expresion_logica PARDER

    PARIZQ          shift and go to state 83


state 69

    (8) if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ statement . LLAVDER

    LLAVDER         shift and go to state 84


state 70

    (9) statement -> imprimir_instr .

    LLAVDER         reduce using rule 9 (statement -> imprimir_instr .)


state 71

    (10) statement -> if_instr .

    LLAVDER         reduce using rule 10 (statement -> if_instr .)


state 72

    (11) statement -> expresion .
    (37) expresion -> expresion . MAS expresion
    (38) expresion -> expresion . MENOS expresion
    (39) expresion -> expresion . POR expresion
    (40) expresion -> expresion . DIVIDIDO expresion

    LLAVDER         reduce using rule 11 (statement -> expresion .)
    MAS             shift and go to state 30
    MENOS           shift and go to state 31
    POR             shift and go to state 32
    DIVIDIDO        shift and go to state 33


state 73

    (12) statement -> while_instr .

    LLAVDER         reduce using rule 12 (statement -> while_instr .)


state 74

    (13) while_instr -> WHILE PARIZQ expresion_logica PARDER LLAVIZQ statement . LLAVDER

    LLAVDER         shift and go to state 85


state 75

    (28) expresion_logica -> PARIZQ expresion_logica PARDER MENQUE PARIZQ . expresion_logica PARDER
    (21) expresion_logica -> . expresion MENQUE expresion
    (22) expresion_logica -> . expresion MAYQUE expresion
    (23) expresion_logica -> . expresion IGUALQUE expresion
    (24) expresion_logica -> . expresion NIGUALQUE expresion
    (25) expresion_logica -> . expresion MAYIGUAL expresion
    (26) expresion_logica -> . expresion MENIGUAL expresion
    (27) expresion_logica -> . PARIZQ expresion_logica PARDER
    (28) expresion_logica -> . PARIZQ expresion_logica PARDER MENQUE PARIZQ expresion_logica PARDER
    (29) expresion_logica -> . PARIZQ expresion_logica PARDER MAYQUE PARIZQ expresion_logica PARDER
    (30) expresion_logica -> . PARIZQ expresion_logica PARDER IGUALQUE PARIZQ expresion_logica PARDER
    (31) expresion_logica -> . PARIZQ expresion_logica PARDER NIGUALQUE PARIZQ expresion_logica PARDER
    (32) expresion_logica -> . PARIZQ expresion_logica PARDER MAYIGUAL PARIZQ expresion_logica PARDER
    (33) expresion_logica -> . PARIZQ expresion_logica PARDER MENIGUAL PARIZQ expresion_logica PARDER
    (34) expresion_logica -> . PARIZQ expresion_logica PARDER AND PARIZQ expresion_logica PARDER
    (35) expresion_logica -> . PARIZQ expresion_logica PARDER ORD PARIZQ expresion_logica PARDER
    (36) expresion_logica -> . PARIZQ expresion_logica PARDER NOT PARIZQ expresion_logica PARDER
    (15) expresion -> . ENTERO
    (16) expresion -> . DECIMAL
    (17) expresion -> . CADENA
    (18) expresion -> . ID
    (20) expresion -> . PARIZQ expresion PARDER
    (37) expresion -> . expresion MAS expresion
    (38) expresion -> . expresion MENOS expresion
    (39) expresion -> . expresion POR expresion
    (40) expresion -> . expresion DIVIDIDO expresion

    PARIZQ          shift and go to state 24
    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA          shift and go to state 21
    ID              shift and go to state 22

    expresion_logica               shift and go to state 86
    expresion                      shift and go to state 26

state 76

    (29) expresion_logica -> PARIZQ expresion_logica PARDER MAYQUE PARIZQ . expresion_logica PARDER
    (21) expresion_logica -> . expresion MENQUE expresion
    (22) expresion_logica -> . expresion MAYQUE expresion
    (23) expresion_logica -> . expresion IGUALQUE expresion
    (24) expresion_logica -> . expresion NIGUALQUE expresion
    (25) expresion_logica -> . expresion MAYIGUAL expresion
    (26) expresion_logica -> . expresion MENIGUAL expresion
    (27) expresion_logica -> . PARIZQ expresion_logica PARDER
    (28) expresion_logica -> . PARIZQ expresion_logica PARDER MENQUE PARIZQ expresion_logica PARDER
    (29) expresion_logica -> . PARIZQ expresion_logica PARDER MAYQUE PARIZQ expresion_logica PARDER
    (30) expresion_logica -> . PARIZQ expresion_logica PARDER IGUALQUE PARIZQ expresion_logica PARDER
    (31) expresion_logica -> . PARIZQ expresion_logica PARDER NIGUALQUE PARIZQ expresion_logica PARDER
    (32) expresion_logica -> . PARIZQ expresion_logica PARDER MAYIGUAL PARIZQ expresion_logica PARDER
    (33) expresion_logica -> . PARIZQ expresion_logica PARDER MENIGUAL PARIZQ expresion_logica PARDER
    (34) expresion_logica -> . PARIZQ expresion_logica PARDER AND PARIZQ expresion_logica PARDER
    (35) expresion_logica -> . PARIZQ expresion_logica PARDER ORD PARIZQ expresion_logica PARDER
    (36) expresion_logica -> . PARIZQ expresion_logica PARDER NOT PARIZQ expresion_logica PARDER
    (15) expresion -> . ENTERO
    (16) expresion -> . DECIMAL
    (17) expresion -> . CADENA
    (18) expresion -> . ID
    (20) expresion -> . PARIZQ expresion PARDER
    (37) expresion -> . expresion MAS expresion
    (38) expresion -> . expresion MENOS expresion
    (39) expresion -> . expresion POR expresion
    (40) expresion -> . expresion DIVIDIDO expresion

    PARIZQ          shift and go to state 24
    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA          shift and go to state 21
    ID              shift and go to state 22

    expresion_logica               shift and go to state 87
    expresion                      shift and go to state 26

state 77

    (30) expresion_logica -> PARIZQ expresion_logica PARDER IGUALQUE PARIZQ . expresion_logica PARDER
    (21) expresion_logica -> . expresion MENQUE expresion
    (22) expresion_logica -> . expresion MAYQUE expresion
    (23) expresion_logica -> . expresion IGUALQUE expresion
    (24) expresion_logica -> . expresion NIGUALQUE expresion
    (25) expresion_logica -> . expresion MAYIGUAL expresion
    (26) expresion_logica -> . expresion MENIGUAL expresion
    (27) expresion_logica -> . PARIZQ expresion_logica PARDER
    (28) expresion_logica -> . PARIZQ expresion_logica PARDER MENQUE PARIZQ expresion_logica PARDER
    (29) expresion_logica -> . PARIZQ expresion_logica PARDER MAYQUE PARIZQ expresion_logica PARDER
    (30) expresion_logica -> . PARIZQ expresion_logica PARDER IGUALQUE PARIZQ expresion_logica PARDER
    (31) expresion_logica -> . PARIZQ expresion_logica PARDER NIGUALQUE PARIZQ expresion_logica PARDER
    (32) expresion_logica -> . PARIZQ expresion_logica PARDER MAYIGUAL PARIZQ expresion_logica PARDER
    (33) expresion_logica -> . PARIZQ expresion_logica PARDER MENIGUAL PARIZQ expresion_logica PARDER
    (34) expresion_logica -> . PARIZQ expresion_logica PARDER AND PARIZQ expresion_logica PARDER
    (35) expresion_logica -> . PARIZQ expresion_logica PARDER ORD PARIZQ expresion_logica PARDER
    (36) expresion_logica -> . PARIZQ expresion_logica PARDER NOT PARIZQ expresion_logica PARDER
    (15) expresion -> . ENTERO
    (16) expresion -> . DECIMAL
    (17) expresion -> . CADENA
    (18) expresion -> . ID
    (20) expresion -> . PARIZQ expresion PARDER
    (37) expresion -> . expresion MAS expresion
    (38) expresion -> . expresion MENOS expresion
    (39) expresion -> . expresion POR expresion
    (40) expresion -> . expresion DIVIDIDO expresion

    PARIZQ          shift and go to state 24
    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA          shift and go to state 21
    ID              shift and go to state 22

    expresion_logica               shift and go to state 88
    expresion                      shift and go to state 26

state 78

    (31) expresion_logica -> PARIZQ expresion_logica PARDER NIGUALQUE PARIZQ . expresion_logica PARDER
    (21) expresion_logica -> . expresion MENQUE expresion
    (22) expresion_logica -> . expresion MAYQUE expresion
    (23) expresion_logica -> . expresion IGUALQUE expresion
    (24) expresion_logica -> . expresion NIGUALQUE expresion
    (25) expresion_logica -> . expresion MAYIGUAL expresion
    (26) expresion_logica -> . expresion MENIGUAL expresion
    (27) expresion_logica -> . PARIZQ expresion_logica PARDER
    (28) expresion_logica -> . PARIZQ expresion_logica PARDER MENQUE PARIZQ expresion_logica PARDER
    (29) expresion_logica -> . PARIZQ expresion_logica PARDER MAYQUE PARIZQ expresion_logica PARDER
    (30) expresion_logica -> . PARIZQ expresion_logica PARDER IGUALQUE PARIZQ expresion_logica PARDER
    (31) expresion_logica -> . PARIZQ expresion_logica PARDER NIGUALQUE PARIZQ expresion_logica PARDER
    (32) expresion_logica -> . PARIZQ expresion_logica PARDER MAYIGUAL PARIZQ expresion_logica PARDER
    (33) expresion_logica -> . PARIZQ expresion_logica PARDER MENIGUAL PARIZQ expresion_logica PARDER
    (34) expresion_logica -> . PARIZQ expresion_logica PARDER AND PARIZQ expresion_logica PARDER
    (35) expresion_logica -> . PARIZQ expresion_logica PARDER ORD PARIZQ expresion_logica PARDER
    (36) expresion_logica -> . PARIZQ expresion_logica PARDER NOT PARIZQ expresion_logica PARDER
    (15) expresion -> . ENTERO
    (16) expresion -> . DECIMAL
    (17) expresion -> . CADENA
    (18) expresion -> . ID
    (20) expresion -> . PARIZQ expresion PARDER
    (37) expresion -> . expresion MAS expresion
    (38) expresion -> . expresion MENOS expresion
    (39) expresion -> . expresion POR expresion
    (40) expresion -> . expresion DIVIDIDO expresion

    PARIZQ          shift and go to state 24
    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA          shift and go to state 21
    ID              shift and go to state 22

    expresion_logica               shift and go to state 89
    expresion                      shift and go to state 26

state 79

    (32) expresion_logica -> PARIZQ expresion_logica PARDER MAYIGUAL PARIZQ . expresion_logica PARDER
    (21) expresion_logica -> . expresion MENQUE expresion
    (22) expresion_logica -> . expresion MAYQUE expresion
    (23) expresion_logica -> . expresion IGUALQUE expresion
    (24) expresion_logica -> . expresion NIGUALQUE expresion
    (25) expresion_logica -> . expresion MAYIGUAL expresion
    (26) expresion_logica -> . expresion MENIGUAL expresion
    (27) expresion_logica -> . PARIZQ expresion_logica PARDER
    (28) expresion_logica -> . PARIZQ expresion_logica PARDER MENQUE PARIZQ expresion_logica PARDER
    (29) expresion_logica -> . PARIZQ expresion_logica PARDER MAYQUE PARIZQ expresion_logica PARDER
    (30) expresion_logica -> . PARIZQ expresion_logica PARDER IGUALQUE PARIZQ expresion_logica PARDER
    (31) expresion_logica -> . PARIZQ expresion_logica PARDER NIGUALQUE PARIZQ expresion_logica PARDER
    (32) expresion_logica -> . PARIZQ expresion_logica PARDER MAYIGUAL PARIZQ expresion_logica PARDER
    (33) expresion_logica -> . PARIZQ expresion_logica PARDER MENIGUAL PARIZQ expresion_logica PARDER
    (34) expresion_logica -> . PARIZQ expresion_logica PARDER AND PARIZQ expresion_logica PARDER
    (35) expresion_logica -> . PARIZQ expresion_logica PARDER ORD PARIZQ expresion_logica PARDER
    (36) expresion_logica -> . PARIZQ expresion_logica PARDER NOT PARIZQ expresion_logica PARDER
    (15) expresion -> . ENTERO
    (16) expresion -> . DECIMAL
    (17) expresion -> . CADENA
    (18) expresion -> . ID
    (20) expresion -> . PARIZQ expresion PARDER
    (37) expresion -> . expresion MAS expresion
    (38) expresion -> . expresion MENOS expresion
    (39) expresion -> . expresion POR expresion
    (40) expresion -> . expresion DIVIDIDO expresion

    PARIZQ          shift and go to state 24
    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA          shift and go to state 21
    ID              shift and go to state 22

    expresion_logica               shift and go to state 90
    expresion                      shift and go to state 26

state 80

    (33) expresion_logica -> PARIZQ expresion_logica PARDER MENIGUAL PARIZQ . expresion_logica PARDER
    (21) expresion_logica -> . expresion MENQUE expresion
    (22) expresion_logica -> . expresion MAYQUE expresion
    (23) expresion_logica -> . expresion IGUALQUE expresion
    (24) expresion_logica -> . expresion NIGUALQUE expresion
    (25) expresion_logica -> . expresion MAYIGUAL expresion
    (26) expresion_logica -> . expresion MENIGUAL expresion
    (27) expresion_logica -> . PARIZQ expresion_logica PARDER
    (28) expresion_logica -> . PARIZQ expresion_logica PARDER MENQUE PARIZQ expresion_logica PARDER
    (29) expresion_logica -> . PARIZQ expresion_logica PARDER MAYQUE PARIZQ expresion_logica PARDER
    (30) expresion_logica -> . PARIZQ expresion_logica PARDER IGUALQUE PARIZQ expresion_logica PARDER
    (31) expresion_logica -> . PARIZQ expresion_logica PARDER NIGUALQUE PARIZQ expresion_logica PARDER
    (32) expresion_logica -> . PARIZQ expresion_logica PARDER MAYIGUAL PARIZQ expresion_logica PARDER
    (33) expresion_logica -> . PARIZQ expresion_logica PARDER MENIGUAL PARIZQ expresion_logica PARDER
    (34) expresion_logica -> . PARIZQ expresion_logica PARDER AND PARIZQ expresion_logica PARDER
    (35) expresion_logica -> . PARIZQ expresion_logica PARDER ORD PARIZQ expresion_logica PARDER
    (36) expresion_logica -> . PARIZQ expresion_logica PARDER NOT PARIZQ expresion_logica PARDER
    (15) expresion -> . ENTERO
    (16) expresion -> . DECIMAL
    (17) expresion -> . CADENA
    (18) expresion -> . ID
    (20) expresion -> . PARIZQ expresion PARDER
    (37) expresion -> . expresion MAS expresion
    (38) expresion -> . expresion MENOS expresion
    (39) expresion -> . expresion POR expresion
    (40) expresion -> . expresion DIVIDIDO expresion

    PARIZQ          shift and go to state 24
    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA          shift and go to state 21
    ID              shift and go to state 22

    expresion_logica               shift and go to state 91
    expresion                      shift and go to state 26

state 81

    (34) expresion_logica -> PARIZQ expresion_logica PARDER AND PARIZQ . expresion_logica PARDER
    (21) expresion_logica -> . expresion MENQUE expresion
    (22) expresion_logica -> . expresion MAYQUE expresion
    (23) expresion_logica -> . expresion IGUALQUE expresion
    (24) expresion_logica -> . expresion NIGUALQUE expresion
    (25) expresion_logica -> . expresion MAYIGUAL expresion
    (26) expresion_logica -> . expresion MENIGUAL expresion
    (27) expresion_logica -> . PARIZQ expresion_logica PARDER
    (28) expresion_logica -> . PARIZQ expresion_logica PARDER MENQUE PARIZQ expresion_logica PARDER
    (29) expresion_logica -> . PARIZQ expresion_logica PARDER MAYQUE PARIZQ expresion_logica PARDER
    (30) expresion_logica -> . PARIZQ expresion_logica PARDER IGUALQUE PARIZQ expresion_logica PARDER
    (31) expresion_logica -> . PARIZQ expresion_logica PARDER NIGUALQUE PARIZQ expresion_logica PARDER
    (32) expresion_logica -> . PARIZQ expresion_logica PARDER MAYIGUAL PARIZQ expresion_logica PARDER
    (33) expresion_logica -> . PARIZQ expresion_logica PARDER MENIGUAL PARIZQ expresion_logica PARDER
    (34) expresion_logica -> . PARIZQ expresion_logica PARDER AND PARIZQ expresion_logica PARDER
    (35) expresion_logica -> . PARIZQ expresion_logica PARDER ORD PARIZQ expresion_logica PARDER
    (36) expresion_logica -> . PARIZQ expresion_logica PARDER NOT PARIZQ expresion_logica PARDER
    (15) expresion -> . ENTERO
    (16) expresion -> . DECIMAL
    (17) expresion -> . CADENA
    (18) expresion -> . ID
    (20) expresion -> . PARIZQ expresion PARDER
    (37) expresion -> . expresion MAS expresion
    (38) expresion -> . expresion MENOS expresion
    (39) expresion -> . expresion POR expresion
    (40) expresion -> . expresion DIVIDIDO expresion

    PARIZQ          shift and go to state 24
    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA          shift and go to state 21
    ID              shift and go to state 22

    expresion_logica               shift and go to state 92
    expresion                      shift and go to state 26

state 82

    (35) expresion_logica -> PARIZQ expresion_logica PARDER ORD PARIZQ . expresion_logica PARDER
    (21) expresion_logica -> . expresion MENQUE expresion
    (22) expresion_logica -> . expresion MAYQUE expresion
    (23) expresion_logica -> . expresion IGUALQUE expresion
    (24) expresion_logica -> . expresion NIGUALQUE expresion
    (25) expresion_logica -> . expresion MAYIGUAL expresion
    (26) expresion_logica -> . expresion MENIGUAL expresion
    (27) expresion_logica -> . PARIZQ expresion_logica PARDER
    (28) expresion_logica -> . PARIZQ expresion_logica PARDER MENQUE PARIZQ expresion_logica PARDER
    (29) expresion_logica -> . PARIZQ expresion_logica PARDER MAYQUE PARIZQ expresion_logica PARDER
    (30) expresion_logica -> . PARIZQ expresion_logica PARDER IGUALQUE PARIZQ expresion_logica PARDER
    (31) expresion_logica -> . PARIZQ expresion_logica PARDER NIGUALQUE PARIZQ expresion_logica PARDER
    (32) expresion_logica -> . PARIZQ expresion_logica PARDER MAYIGUAL PARIZQ expresion_logica PARDER
    (33) expresion_logica -> . PARIZQ expresion_logica PARDER MENIGUAL PARIZQ expresion_logica PARDER
    (34) expresion_logica -> . PARIZQ expresion_logica PARDER AND PARIZQ expresion_logica PARDER
    (35) expresion_logica -> . PARIZQ expresion_logica PARDER ORD PARIZQ expresion_logica PARDER
    (36) expresion_logica -> . PARIZQ expresion_logica PARDER NOT PARIZQ expresion_logica PARDER
    (15) expresion -> . ENTERO
    (16) expresion -> . DECIMAL
    (17) expresion -> . CADENA
    (18) expresion -> . ID
    (20) expresion -> . PARIZQ expresion PARDER
    (37) expresion -> . expresion MAS expresion
    (38) expresion -> . expresion MENOS expresion
    (39) expresion -> . expresion POR expresion
    (40) expresion -> . expresion DIVIDIDO expresion

    PARIZQ          shift and go to state 24
    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA          shift and go to state 21
    ID              shift and go to state 22

    expresion_logica               shift and go to state 93
    expresion                      shift and go to state 26

state 83

    (36) expresion_logica -> PARIZQ expresion_logica PARDER NOT PARIZQ . expresion_logica PARDER
    (21) expresion_logica -> . expresion MENQUE expresion
    (22) expresion_logica -> . expresion MAYQUE expresion
    (23) expresion_logica -> . expresion IGUALQUE expresion
    (24) expresion_logica -> . expresion NIGUALQUE expresion
    (25) expresion_logica -> . expresion MAYIGUAL expresion
    (26) expresion_logica -> . expresion MENIGUAL expresion
    (27) expresion_logica -> . PARIZQ expresion_logica PARDER
    (28) expresion_logica -> . PARIZQ expresion_logica PARDER MENQUE PARIZQ expresion_logica PARDER
    (29) expresion_logica -> . PARIZQ expresion_logica PARDER MAYQUE PARIZQ expresion_logica PARDER
    (30) expresion_logica -> . PARIZQ expresion_logica PARDER IGUALQUE PARIZQ expresion_logica PARDER
    (31) expresion_logica -> . PARIZQ expresion_logica PARDER NIGUALQUE PARIZQ expresion_logica PARDER
    (32) expresion_logica -> . PARIZQ expresion_logica PARDER MAYIGUAL PARIZQ expresion_logica PARDER
    (33) expresion_logica -> . PARIZQ expresion_logica PARDER MENIGUAL PARIZQ expresion_logica PARDER
    (34) expresion_logica -> . PARIZQ expresion_logica PARDER AND PARIZQ expresion_logica PARDER
    (35) expresion_logica -> . PARIZQ expresion_logica PARDER ORD PARIZQ expresion_logica PARDER
    (36) expresion_logica -> . PARIZQ expresion_logica PARDER NOT PARIZQ expresion_logica PARDER
    (15) expresion -> . ENTERO
    (16) expresion -> . DECIMAL
    (17) expresion -> . CADENA
    (18) expresion -> . ID
    (20) expresion -> . PARIZQ expresion PARDER
    (37) expresion -> . expresion MAS expresion
    (38) expresion -> . expresion MENOS expresion
    (39) expresion -> . expresion POR expresion
    (40) expresion -> . expresion DIVIDIDO expresion

    PARIZQ          shift and go to state 24
    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA          shift and go to state 21
    ID              shift and go to state 22

    expresion_logica               shift and go to state 94
    expresion                      shift and go to state 26

state 84

    (8) if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ statement LLAVDER .

    PRINT           reduce using rule 8 (if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ statement LLAVDER .)
    ID              reduce using rule 8 (if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ statement LLAVDER .)
    IF              reduce using rule 8 (if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ statement LLAVDER .)
    WHILE           reduce using rule 8 (if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ statement LLAVDER .)
    $end            reduce using rule 8 (if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ statement LLAVDER .)
    LLAVDER         reduce using rule 8 (if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ statement LLAVDER .)


state 85

    (13) while_instr -> WHILE PARIZQ expresion_logica PARDER LLAVIZQ statement LLAVDER .

    PRINT           reduce using rule 13 (while_instr -> WHILE PARIZQ expresion_logica PARDER LLAVIZQ statement LLAVDER .)
    ID              reduce using rule 13 (while_instr -> WHILE PARIZQ expresion_logica PARDER LLAVIZQ statement LLAVDER .)
    IF              reduce using rule 13 (while_instr -> WHILE PARIZQ expresion_logica PARDER LLAVIZQ statement LLAVDER .)
    WHILE           reduce using rule 13 (while_instr -> WHILE PARIZQ expresion_logica PARDER LLAVIZQ statement LLAVDER .)
    $end            reduce using rule 13 (while_instr -> WHILE PARIZQ expresion_logica PARDER LLAVIZQ statement LLAVDER .)
    LLAVDER         reduce using rule 13 (while_instr -> WHILE PARIZQ expresion_logica PARDER LLAVIZQ statement LLAVDER .)


state 86

    (28) expresion_logica -> PARIZQ expresion_logica PARDER MENQUE PARIZQ expresion_logica . PARDER

    PARDER          shift and go to state 95


state 87

    (29) expresion_logica -> PARIZQ expresion_logica PARDER MAYQUE PARIZQ expresion_logica . PARDER

    PARDER          shift and go to state 96


state 88

    (30) expresion_logica -> PARIZQ expresion_logica PARDER IGUALQUE PARIZQ expresion_logica . PARDER

    PARDER          shift and go to state 97


state 89

    (31) expresion_logica -> PARIZQ expresion_logica PARDER NIGUALQUE PARIZQ expresion_logica . PARDER

    PARDER          shift and go to state 98


state 90

    (32) expresion_logica -> PARIZQ expresion_logica PARDER MAYIGUAL PARIZQ expresion_logica . PARDER

    PARDER          shift and go to state 99


state 91

    (33) expresion_logica -> PARIZQ expresion_logica PARDER MENIGUAL PARIZQ expresion_logica . PARDER

    PARDER          shift and go to state 100


state 92

    (34) expresion_logica -> PARIZQ expresion_logica PARDER AND PARIZQ expresion_logica . PARDER

    PARDER          shift and go to state 101


state 93

    (35) expresion_logica -> PARIZQ expresion_logica PARDER ORD PARIZQ expresion_logica . PARDER

    PARDER          shift and go to state 102


state 94

    (36) expresion_logica -> PARIZQ expresion_logica PARDER NOT PARIZQ expresion_logica . PARDER

    PARDER          shift and go to state 103


state 95

    (28) expresion_logica -> PARIZQ expresion_logica PARDER MENQUE PARIZQ expresion_logica PARDER .

    PARDER          reduce using rule 28 (expresion_logica -> PARIZQ expresion_logica PARDER MENQUE PARIZQ expresion_logica PARDER .)


state 96

    (29) expresion_logica -> PARIZQ expresion_logica PARDER MAYQUE PARIZQ expresion_logica PARDER .

    PARDER          reduce using rule 29 (expresion_logica -> PARIZQ expresion_logica PARDER MAYQUE PARIZQ expresion_logica PARDER .)


state 97

    (30) expresion_logica -> PARIZQ expresion_logica PARDER IGUALQUE PARIZQ expresion_logica PARDER .

    PARDER          reduce using rule 30 (expresion_logica -> PARIZQ expresion_logica PARDER IGUALQUE PARIZQ expresion_logica PARDER .)


state 98

    (31) expresion_logica -> PARIZQ expresion_logica PARDER NIGUALQUE PARIZQ expresion_logica PARDER .

    PARDER          reduce using rule 31 (expresion_logica -> PARIZQ expresion_logica PARDER NIGUALQUE PARIZQ expresion_logica PARDER .)


state 99

    (32) expresion_logica -> PARIZQ expresion_logica PARDER MAYIGUAL PARIZQ expresion_logica PARDER .

    PARDER          reduce using rule 32 (expresion_logica -> PARIZQ expresion_logica PARDER MAYIGUAL PARIZQ expresion_logica PARDER .)


state 100

    (33) expresion_logica -> PARIZQ expresion_logica PARDER MENIGUAL PARIZQ expresion_logica PARDER .

    PARDER          reduce using rule 33 (expresion_logica -> PARIZQ expresion_logica PARDER MENIGUAL PARIZQ expresion_logica PARDER .)


state 101

    (34) expresion_logica -> PARIZQ expresion_logica PARDER AND PARIZQ expresion_logica PARDER .

    PARDER          reduce using rule 34 (expresion_logica -> PARIZQ expresion_logica PARDER AND PARIZQ expresion_logica PARDER .)


state 102

    (35) expresion_logica -> PARIZQ expresion_logica PARDER ORD PARIZQ expresion_logica PARDER .

    PARDER          reduce using rule 35 (expresion_logica -> PARIZQ expresion_logica PARDER ORD PARIZQ expresion_logica PARDER .)


state 103

    (36) expresion_logica -> PARIZQ expresion_logica PARDER NOT PARIZQ expresion_logica PARDER .

    PARDER          reduce using rule 36 (expresion_logica -> PARIZQ expresion_logica PARDER NOT PARIZQ expresion_logica PARDER .)

